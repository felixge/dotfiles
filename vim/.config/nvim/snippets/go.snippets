snippet pa
	package ${1:name}
snippet pm
	package main

	func main() {
		${1}
	}
snippet pmr
	package main

	import (
		"fmt"
		"os"
	)

	func main() {
		if err := run(); err != nil {
			fmt.Fprintln(os.Stderr, err)
			os.Exit(1)
		}
	}

	func run() error {
		${1:return nil}
	}
snippet p
	fmt.Printf("${1:%s}\\n", ${2:args})${3}
snippet l
	log.Printf("${1:%s}", ${2:args})${3}
snippet lf
	log.Fatalf("${1:%s}", ${2:args})${3}
snippet m
	func (${1:receiver}) ${2:methodName}(${3:args}) ${4:... } {
		${5}
	}
snippet f
	func ${1:functionName}(${2:args}) ${3:... }{
		${4}
	}
snippet te
	func Test${1:functionName}(t *testing.T) {
		${2}
	}
snippet be
	func Benchmark${1:functionName}(b *testing.B) {
		${2}
	}
snippet s
	type ${1:name} struct{${2}}
snippet for
	for ${1} {
		${0}
	}
snippet if
	if ${1} {
		${0}
	}
snippet ie
	if err != nil {
		${0}
	}
snippet r
	return ${0}
snippet re
	return err
snippet rn
	return nil
snippet rne
	return nil, err
snippet rnn
	return nil, nil
snippet tf
	t.Fatal($0)
snippet tff
	t.Fatalf("${1:%s}", ${2:args})${3}
snippet e
	error
snippet i
	interface{}
snippet t
	type ${1:name} ${2}
snippet _f
	var _, srcFile, _, _ = runtime.Caller(0)
snippet _d
	_, srcFile, _, _ := runtime.Caller(0)
	srcDir := filepath.Dir(__filename)
snippet w
	w http.ResponseWriter, r *http.Request
