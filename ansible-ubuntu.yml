# This ansible playbook configures remote ubuntu 22.04 machines on AWS as basic
# development machines. I mostly develop on macOS, but some stuff needs linux.
- hosts: all
  vars:
      go_path: '~/src/github.com/golang/go'
      go_version: go1.20

  tasks:
  - name: update apt
    tags: [apt]
    become: true
    apt:
      update_cache: yes
      cache_valid_time: 3600
  - name: add neovim apt repo
    tags: [apt]
    become: true
    apt_repository:
      repo: ppa:neovim-ppa/unstable
  - name: install apt packages
    tags: [apt]
    become: true
    apt:
      pkg:
      - atop # great overall system monitoring tool
      - bpftrace # dtrace is dead, long live dtrace
      - build-essential # gcc toolchain
      - errno # view C error codes
      - fzf # fuzzy finder
      - gdb # debugger
      - golang-go # bootstrap Go, other versions are installed below
      - graphviz # visualize graphs, needed for pprof
      - linux-tools-aws # linux perf
      - linux-tools-common # linux perf
      - make # build system
      - neovim # good editor
      - ripgrep # fast search
      - systemtap # bpftrace's older brother
      - unzip # decompression

  - name: Create nvim config directory
    tags: [nvim]
    file:
      path: '~/.config/nvim/'
      state: directory
  - name: Create nvim config
    tags: [nvim]
    copy:
      src: 'nvim-ubuntu/init.lua'
      dest: '~/.config/nvim/init.lua'

  - name: Create gdb config
    tags: [gdb]
    copy:
      src: 'nvim-ubuntu/gdbinit'
      dest: '~/.gdbinit'

  - name: Configure bashrc
    tags: [bashrc]
    blockinfile:
      insertbefore: BOF
      path: '~/.bashrc'
      block: |
        export EDITOR="$(which nvim)"
        PATH="$PATH:/home/ubuntu/go/bin"
        alias vim="$(which nvim)"

        cl() {
          cloned=$(command cl -dir "$HOME/src" "$1")
          cd "$cloned"
        }

        # fzf key bindings
        source /usr/share/doc/fzf/examples/key-bindings.bash

  - name: Disable NMI watchdog (so perf stat can report branch misses)
    tags: [nmi]
    become: true
    shell: 'echo 0 > /proc/sys/kernel/nmi_watchdog'
    ignore_errors: yes # only works on bare metal instances

  - name: install {{ go_version }}
    tags: [go]
    shell: 'go install golang.org/dl/{{ go_version }}@latest && {{ go_version }} download'
    args:
      executable: /bin/bash

  - name: install go packages
    tags: [goinstall]
    command: "{{ go_version }} install {{ item }}"
    with_items:
      - github.com/boyter/scc/v3@latest # count lines of code
      - github.com/felixge/cl@latest # git clone helper
      - github.com/go-delve/delve/cmd/dlv@latest # debugger
      - github.com/goreleaser/goreleaser@latest # release go apps
      - github.com/maruel/panicparse/v2@latest # analyze go stack traces
      - github.com/spf13/cobra-cli@latest # cli scaffold generator
      - github.com/x-motemen/gore/cmd/gore@latest # repl
      - golang.org/x/perf/cmd/benchstat@latest # benchmark analysis
      - golang.org/x/review/git-codereview@latest # for contributing to go
      - golang.org/x/tools/cmd/go-contrib-init@latest # for contributing to go
      - gotest.tools/gotestsum@latest # pretty test output

  - name: Schedule a cron job to shut down the machine at midnight
    tags: [cron]
    become: true
    cron:
      name: "Shutdown machine at midnight"
      cron_file: "shutdown_midnight"
      minute: "0"
      hour: "0"
      user: "root"
      job: "/sbin/shutdown -h now"
