snippet pa
	package ${1:name}
snippet pm
	package main

	func main() {
		${1}
	}
snippet p
	fmt.Printf("${1:format}\n", ${2:args})${3}
snippet l
	log.Printf("${1:format}\n", ${2:args})${3}
snippet tl
	t.Logf("${1:format}", ${2:args})${3}
snippet m
	func (${1:receiver}) ${2:methodName}(${3:args}) ${4:... } {
		${5}
	}
snippet f
	func ${1:functionName}(${2:args}) ${3:... }{
		${4}
	}
snippet s
	type ${1:name} struct{${2}}
snippet e
	error
snippet i
	interface{}
snippet t
	type ${1:name} ${2}
snippet __f
	import (
		"runtime"
	)
	// Get name of this source file
	var _, __filename, _, _ = runtime.Caller(0)
snippet __d
	import (
		"runtime"
		"path/filepath"
	)
	// Get name/dir of this source file
	var (
		_, __filename, _, _ = runtime.Caller(0)
		__dirname = filepath.Dir(__filename)
	)
snippet tr
	TODO(refactor): 
snippet fa
	func fatalf(msg string, args ...interface{}) {
		fmt.Fprintf(os.Stderr, msg+"\n", args...)
		os.Exit(1)
	}
